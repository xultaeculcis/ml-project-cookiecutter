trigger: none

pr:
  - main

pool:
  vmImage: ubuntu-latest

variables:
  repo_name: project-name  # default repo name

stages:
#  - stage: "pre_commit_hooks"
#    displayName: "Run pre-commit hooks"
#    jobs:
#      - job: "pre_commit_hooks"
#        displayName: "Run pre-commit hooks"
#        steps:
#          - task: UsePythonVersion@0
#            inputs:
#              versionSpec: "3.11"
#              addToPath: true
#
#          - script: |
#              python -m pip install --upgrade pip
#              pip install pre-commit pytest cookiecutter
#              pre-commit install
#            displayName: "Install dependencies"
#
#          - script: |
#              pre-commit run --all-files
#            displayName: "Run pre-commit hooks"

  - stage: "project_creation_checks"
    displayName: "Run post-cookiecutter template creation checks"
    jobs:
      - job: "create_project_from_template"
        displayName: "Create cookiecutter project from template"
        steps:
          - task: UsePythonVersion@0
            inputs:
              versionSpec: '3.11'
              addToPath: true

          - script: |
              python -m pip install --upgrade pip
              pip install cookiecutter
            displayName: 'Install Cookiecutter'

          - script: |
              cookiecutter . --no-input
            displayName: 'Generate project from Cookiecutter'

      - job: "env_creation"
        displayName: "Environment creation with conda-lock"
        dependsOn: "create_project_from_template"
        steps:
          - bash: echo "##vso[task.prependpath]$CONDA/bin"
            displayName: Add conda to PATH

          - script: |
              cd $(repo_name)
              conda install -n base conda-lock -c conda-forge -y
              make init-project
            displayName: 'Create Conda environment'

      - job: "pre_commit_hooks"
        displayName: "Run pre-commit hooks"
        dependsOn: "env_creation"
        steps:
          - script: |
              cd $(repo_name)
              python -m pip install --upgrade pip
              pip install pre-commit pytest cookiecutter
              pre-commit install
            displayName: "Install dependencies"

          - script: |
              pre-commit run --all-files
            displayName: "Run pre-commit hooks"
